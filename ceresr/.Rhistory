geom_ribbon(aes(ymin=0, ymax=tpr), alpha=0.2, fill="green") +
geom_ribbon(aes(ymax=1, ymin=tpr), alpha=0.2, fill="red") +
labs(title="ROC curve")
data.frame(tpr=auc_mat[id_auroc, "tpr"],
fpr=auc_mat[id_auroc,"fpr"]) %>%
ggplot2::ggplot(aes(x=1-fpr, y=tpr)) +
geom_line() +
geom_ribbon(aes(ymin=0, ymax=tpr), alpha=0.05, fill="green") +
geom_ribbon(aes(ymax=1, ymin=tpr), alpha=0.05, fill="red") +
labs(title="ROC curve")
data.frame(tpr=auc_mat[id_auroc, "tpr"],
ppv=auc_mat[id_auroc,"ppv"]) %>%
ggplot2::ggplot(aes(x=ppv, y=tpr)) +
geom_line() +
geom_ribbon(aes(ymin=0, ymax=tpr), alpha=0.05, fill="green") +
geom_ribbon(aes(ymax=1, ymin=tpr), alpha=0.05, fill="red") +
labs(title="Precision-recall curve")
data.frame(tpr=auc_mat[id_auroc, "tpr"],
ppv=auc_mat[id_auroc,"ppv"]) %>%
ggplot2::ggplot(aes(x=ppv, y=tpr)) +
geom_line() +
geom_ribbon(aes(ymin=0, ymax=tpr), alpha=0.05, fill="#4daf4a") +
geom_ribbon(aes(ymax=1, ymin=tpr), alpha=0.05, fill="#e41a1c") +
labs(title="Precision-recall curve")
data.frame(tpr=auc_mat[id_auroc, "tpr"],
fpr=auc_mat[id_auroc,"fpr"]) %>%
ggplot2::ggplot(aes(x=1-fpr, y=tpr)) +
geom_line() +
geom_ribbon(aes(ymin=0, ymax=tpr), alpha=0.05, fill="#4daf4a") +
geom_ribbon(aes(ymax=1, ymin=tpr), alpha=0.05, fill="#e41a1c") +
labs(title="ROC curve")
data.frame(tpr=auc_mat[id_auroc, "tpr"],
fpr=auc_mat[id_auroc,"fpr"]) %>%
ggplot2::ggplot(aes(x=1-fpr, y=tpr)) +
geom_line() +
geom_ribbon(aes(ymin=0, ymax=tpr), alpha=0.05, fill="grey50") +
geom_ribbon(aes(ymax=1, ymin=tpr), alpha=0.05, fill="#e41a1c") +
labs(title="ROC curve")
data.frame(tpr=auc_mat[id_auroc, "tpr"],
fpr=auc_mat[id_auroc,"fpr"]) %>%
ggplot2::ggplot(aes(x=1-fpr, y=tpr)) +
geom_line() +
geom_ribbon(aes(ymin=0, ymax=tpr), alpha=0.05, fill="#377eb8") +
geom_ribbon(aes(ymax=1, ymin=tpr), alpha=0.05, fill="grey50") +
labs(title="ROC curve")
data.frame(tpr=auc_mat[id_auroc, "tpr"],
fpr=auc_mat[id_auroc,"fpr"]) %>%
ggplot2::ggplot(aes(x=1-fpr, y=tpr)) +
geom_line() +
geom_ribbon(aes(ymin=0, ymax=tpr), alpha=0.25, fill="#377eb8") +
geom_ribbon(aes(ymax=1, ymin=tpr), alpha=0.25, fill="grey50") +
labs(title="ROC curve")
source('~/CPDS/cds_pkg/cdsr/R/evaluate_prediction_auc.R')
devtools::install("~/CPDS/cds_pkg/cdsr")
target_gene_table <- readr::read_tsv("meta/xpr/gppinfo.txt") %>%
dplyr::rename(sgRNA_seq=`Target Seq`,
target_gene=`Target Gene`) %>%
dplyr::select(sgRNA_seq, target_gene) %>%
rbind(readr::read_csv("meta/hahn/gppinfo.csv") %>%
dplyr::rename(sgRNA_seq=`Target Seq`,
target_gene=`Target Gene`) %>%
dplyr::select(sgRNA_seq, target_gene) %>%
rbind(readr::read_tsv("meta/hahn/staninfo.txt") %>%
dplyr::rename(sgRNA_seq=`Target Sequence`,
target_gene=x_gene_symbol) %>%
dplyr::select(sgRNA_seq, target_gene))) %>%
dplyr::distinct()
tsne_obj <- Rtsne::Rtsne(feature_data)
tsne_df <- data.frame(tsne_one=tsne_obj$Y[,1],
tsne_two=tsne_obj$Y[,2],
assay_id=gsub(".*[:]", "", row.names(feature_data)),
ccle_name=gsub(".*:", "", gsub("[:]XPR|[:]HAHN", "", row.names(feature_data))),
sgRNA_seq=gsub(":.*", "", row.names(feature_data)),
dep=target_data[,1]) %>%
dplyr::left_join(target_gene_table)
ggplot2::ggplot(tsne_df, aes(x=tsne_one, y=tsne_two)) +
geom_point(aes(colour=ccle_name, shape=assay_id)) +
scale_shape_manual(values=c(1, 16))
ggplot2::ggplot(tsne_df, aes(x=tsne_one, y=tsne_two)) +
geom_point(aes(colour=ccle_name, shape=assay_id)) +
scale_shape_manual(values=c(1, 16))
View(tsne_df)
setwd("~/CPDS/xpr_l1000")
tsne_df <- data.frame(tsne_one=tsne_obj$Y[,1],
tsne_two=tsne_obj$Y[,2],
rid=row.names(feature_data),
assay_id=gsub(".*[:]", "", row.names(feature_data)),
ccle_name=gsub(".*:", "", gsub("[:]XPR|[:]HAHN", "", row.names(feature_data))),
sgRNA_seq=gsub(":.*", "", row.names(feature_data)),
dep=target_data[,1]) %>%
dplyr::left_join(target_gene_table) %>%
dplyr::left_join(readr::read_tsv("meta/rowinfo.txt"))
View(tsne_df)
View(target_gene_table)
View(readr::read_tsv("meta/rowinfo.txt"))
tsne_df <- data.frame(tsne_one=tsne_obj$Y[,1],
tsne_two=tsne_obj$Y[,2],
assay_id=gsub(".*[:]", "", row.names(feature_data)),
ccle_name=gsub(".*:", "", gsub("[:]XPR|[:]HAHN", "", row.names(feature_data))),
sgRNA_seq=gsub(":.*", "", row.names(feature_data)),
dep=target_data[,1]) %>%
dplyr::left_join(target_gene_table) %>%
dplyr::left_join(readr::read_tsv("meta/rowinfo.txt") %>%
dplyr::rename(target_gene=pr_gene_symbol))
View(tsne_df)
tsne_obj <- Rtsne::Rtsne(feature_data)
tsne_df <- data.frame(tsne_one=tsne_obj$Y[,1],
tsne_two=tsne_obj$Y[,2],
assay_id=gsub(".*[:]", "", row.names(feature_data)),
ccle_name=gsub(".*:", "", gsub("[:]XPR|[:]HAHN", "", row.names(feature_data))),
sgRNA_seq=gsub(":.*", "", row.names(feature_data)),
dep=target_data[,1]) %>%
dplyr::left_join(target_gene_table)
ggplot2::ggplot(tsne_df, aes(x=tsne_one, y=tsne_two)) +
geom_point(aes(colour=ccle_name, shape=assay_id)) +
scale_shape_manual(values=c(1, 16))
View(readr::read_csv("meta/xpr/siginfo.txt"))
View(readr::read_tsv("meta/xpr/siginfo.txt"))
ggplot2::ggplot(tsne_df, aes(x=tsne_one, y=tsne_two)) +
geom_point(aes(colour=dep, shape=assay_id)) +
scale_shape_manual(values=c(1, 16))
View(pred_df)
View(pred_df)
pred_df %>%
dplyr::mutate(sample_id=row.names(.))
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"))
length(unique(pred_df %>% row.names()))
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id")) %>%
dplyr::left_join(target_gene_table)
class(pred_df)
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":")
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":") %>%
dplyr::left_join(target_gene_table) %>%
ggplot2::ggplot(aes(x=pred, y=tar)) +
geom_point() +
facet_wrap(target_gene ~ .)
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":")
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":") %>%
dplyr::left_join(target_gene_table) %>% View()
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":") %>%
dplyr::left_join(target_gene_table) %>%
ggplot2::ggplot(aes(x=pred, y=tar)) +
geom_point() +
facet_wrap(. ~ target_gene)
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":") %>%
dplyr::left_join(target_gene_table) %>%
ggplot2::ggplot(aes(x=pred, y=tar)) +
geom_point()
help(facet_wrap)
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":") %>%
dplyr::left_join(target_gene_table) %>%
ggplot2::ggplot(aes(x=pred, y=tar)) +
geom_point() +
facet_wrap(~target_gene)
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":") %>%
dplyr::left_join(target_gene_table) %>%
ggplot2::ggplot(aes(x=pred, y=tar)) +
geom_point() +
facet_wrap(~target_gene, ncol = 20)
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":") %>%
dplyr::left_join(target_gene_table) %>%
dplyr::mutate(bin_pred=ifelse(pred > 0.5, 1, 0)) %>%
ggplot2::ggplot(aes(x=bin_pred, y=tar)) +
geom_tile(aes(fill=bin_pred == tar)) +
facet_wrap(~target_gene, ncol = 20)
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":") %>%
dplyr::left_join(target_gene_table) %>%
dplyr::mutate(bin_pred=ifelse(pred > 0.5, 1, 0)) %>%
ggplot2::ggplot(aes(x=bin_pred %>% as.factor(), y=tar %>% as.factor())) +
geom_tile(aes(fill=bin_pred == tar)) +
facet_wrap(~target_gene, ncol = 20)
hist(pred_df$pred[pred_df$tar])
hist(pred_df$pred[pred_df$tar==1])
hist(pred_df$pred[pred_df$tar==0])
density(pred_df$pred)
threshold <- pred_df %>%
dplyr::arrange(pred) %>%
dplyr::mutate(prob_dep=cumsum(tar) / sum(tar),
prob_indep=cumsum(abs(1-tar)) / sum(abs(1-tar)))
View(threshold)
plot(threshold$prob_dep, threshold$prob_indep)
plot(threshold$prob_dep, threshold$prob_indep)
View(threshold)
density(pred_df$pred[pred_df$tar==0]) %>% plot()
threshold <- pred_df %>%
dplyr::arrange(pred) %>%
dplyr::mutate(prob_dep=cumsum(tar) / sum(tar),
prob_indep=1 - cumsum(abs(1-tar)) / sum(abs(1-tar)))
View(threshold)
plot(threshold$prob_dep, threshold$prob_indep, type="l")
threshold <- pred_df %>%
dplyr::arrange(pred) %>%
dplyr::mutate(prob_dep=cumsum(tar) / sum(tar),
prob_indep=1 - cumsum(abs(1-tar)) / sum(abs(1-tar))) %>%
dplyr::mutate(prob_diff=(prob_dep - prob_indep)^2) %>%
dplyr::filter(prob_diff == min(prob_diff))
threshold
threshold <- pred_df %>%
dplyr::arrange(pred) %>%
dplyr::mutate(prob_dep=cumsum(tar) / sum(tar),
prob_indep=1 - cumsum(abs(1-tar)) / sum(abs(1-tar))) %>%
dplyr::mutate(prob_diff=(prob_dep - prob_indep)^2) %>%
dplyr::filter(prob_diff == min(prob_diff)) %>%
magrittr::extract2("pred")
threshold
source('~/CPDS/cds_pkg/cdsr/R/evaluate_prediction_auc.R')
auc_obj <- cdsr::evaluate_prediction_auc(pred_df$pred, pred_df$tar)
auc_obj %>%
magrittr::extract2("performance_df") %>%
knitr::kable()
auc_obj
devtools::install("~/CPDS/cds_pkg/cdsr")
threshold <- pred_df %>%
dplyr::arrange(pred) %>%
dplyr::mutate(prob_dep=cumsum(tar) / sum(tar),
prob_indep=1 - cumsum(abs(1-tar)) / sum(abs(1-tar))) %>%
dplyr::mutate(prob_diff=(prob_dep - prob_indep)^2) %>%
dplyr::filter(prob_diff == min(prob_diff)) %>%
magrittr::extract2("pred")
pred_df %>%
dplyr::mutate(sample_id=row.names(.)) %>%
tidyr::separate(sample_id, into=c("sgRNA_seq", "ccle_name", "assay_id"), sep=":") %>%
dplyr::left_join(target_gene_table) %>%
dplyr::mutate(bin_pred=ifelse(pred > threshold, 1, 0)) %>%
ggplot2::ggplot(aes(x=bin_pred %>% as.factor(), y=tar %>% as.factor())) +
geom_tile(aes(fill=bin_pred == tar)) +
facet_wrap(~target_gene, ncol = 10) +
scale_fill_brewer(palette="Set1") +
guides(fill=F)
setwd("~/CPDS/brooklyn/survey")
setwd("~/CPDS/brooklyn/survey")
#
library(magrittr)
library(cowplot)
library(plyr)
#
people_db <- readr::read_csv("survey_data/PeopleDB export 06022017.csv")
people_db$org_unit <- sapply(people_db$`Organizational Unit`, function(x){
return(paste(strsplit(x, " [>] ")[[1]][1:min(2, length(strsplit(x, " [>] ")[[1]]))], collapse =" > "))
})
people_db %<>%
dplyr::mutate(subunit=gsub(".*[>]", "", org_unit)) %>%
dplyr::mutate(email=`Broad Email`)
#
broad_map <- readr::read_csv("../broad_map/data/People_and_Rooms_data.csv")
broad_map$org_unit <- sapply(broad_map$org_unit, function(x){
return(paste(strsplit(x, " [>] ")[[1]][1:min(2, length(strsplit(x, " [>] ")[[1]]))], collapse =" > "))
})
broad_map %<>%
dplyr::mutate(subunit=gsub(".*[>]", "", org_unit))
#
survey_dat <- readr::read_csv("survey_data/csv/survey_data.csv") %>%
dplyr::select(-`Email Address`, -`First Name`,
-`LastName`, -`Custom 1`, -`CollectorID`) %>%
dplyr::rename(id=RespondentID, start_date=StartDate,
end_date=EndDate, ip=`IP Address`,
email=enter_broad_email) %>%
dplyr::mutate(seat=ifelse(grepl("[n/]|[/a]|[N/]|[/A]|na", seat), NA, seat)) %>%
dplyr::mutate(email=tolower(email)) %>%
dplyr::mutate(email=gsub("[@]broad.*", "@broadinstitute.org", email)) %>%
dplyr::mutate(`where_to_focus:quantity_of_spaces`=
ifelse(is.na(`where_to_focus:quantity_of_spaces`), 0, 1),
`where_to_focus:location_of_spaces`=
ifelse(is.na(`where_to_focus:location_of_spaces`), 0, 1),
`where_to_focus:variety_of_spaces`=
ifelse(is.na(`where_to_focus:variety_of_spaces`), 0, 1),
`where_to_focus:flexibility_of_spaces`=
ifelse(is.na(`where_to_focus:flexibility_of_spaces`), 0, 1),
`where_to_focus:how_we_use_spaces`=
ifelse(is.na(`where_to_focus:how_we_use_spaces`), 0, 1),
`where_to_focus:technology_in_spaces`=
ifelse(is.na(`where_to_focus:technology_in_spaces`), 0, 1),
`where_to_focus:furniture_in_spaces`=
ifelse(is.na(`where_to_focus:furniture_in_spaces`), 0, 1),
`where_to_focus:policies_governing_spaces`=
ifelse(is.na(`where_to_focus:policies_governing_spaces`), 0, 1)) %>%
reshape2::melt(id.vars=c("id", "start_date",
"end_date", "ip", "email"),
variable.name="question",
value.name="response") %>%
dplyr::mutate(question_type=ifelse(grepl("where_to_be|seat", question),
"long_form", ifelse(grepl("prototype_pitch", question),
"prototype_pitch",
"quantitative"))) %>%
dplyr::mutate(response=ifelse(grepl("pct_", question) & is.na(response),
0,
response)) %>%
dplyr::mutate(response=ifelse(grepl("time_loss", question) & is.na(response),
0,
response)) %>%
dplyr::mutate(response=ifelse(grepl("enter_prototype_competition", question) &
is.na(response),
0,
response)) %>%
dplyr::mutate(response=ifelse(grepl("enter_prototype_competition", question) &
response == "No",
0,
response)) %>%
dplyr::mutate(response=ifelse(grepl("enter_prototype_competition", question) &
response == "Yes",
1,
response)) %>%
dplyr::mutate(response=ifelse(grepl("pct_", question),
as.numeric(response) / 100,
response)) %>%
dplyr::left_join(people_db) %>%
dplyr::left_join(broad_map)
#
library(magrittr)
library(cowplot)
library(plyr)
#
people_db <- readr::read_csv("survey_data/PeopleDB export 06022017.csv")
people_db$org_unit <- sapply(people_db$`Organizational Unit`, function(x){
return(paste(strsplit(x, " [>] ")[[1]][1:min(2, length(strsplit(x, " [>] ")[[1]]))], collapse =" > "))
})
people_db %<>%
dplyr::mutate(subunit=gsub(".*[>]", "", org_unit)) %>%
dplyr::mutate(email=`Broad Email`)
#
broad_map <- readr::read_csv("../broad_map/data/People_and_Rooms_data.csv")
broad_map$org_unit <- sapply(broad_map$org_unit, function(x){
return(paste(strsplit(x, " [>] ")[[1]][1:min(2, length(strsplit(x, " [>] ")[[1]]))], collapse =" > "))
})
broad_map %<>%
dplyr::mutate(subunit=gsub(".*[>]", "", org_unit))
#
survey_dat <- readr::read_csv("survey_data/csv/survey_data.csv") %>%
dplyr::select(-`Email Address`, -`First Name`,
-`LastName`, -`Custom 1`, -`CollectorID`) %>%
dplyr::rename(id=RespondentID, start_date=StartDate,
end_date=EndDate, ip=`IP Address`,
email=enter_broad_email) %>%
dplyr::mutate(seat=ifelse(grepl("[n/]|[/a]|[N/]|[/A]|na", seat), NA, seat)) %>%
dplyr::mutate(email=tolower(email)) %>%
dplyr::mutate(email=gsub("[@]broad.*", "@broadinstitute.org", email)) %>%
dplyr::mutate(`where_to_focus:quantity_of_spaces`=
ifelse(is.na(`where_to_focus:quantity_of_spaces`), 0, 1),
`where_to_focus:location_of_spaces`=
ifelse(is.na(`where_to_focus:location_of_spaces`), 0, 1),
`where_to_focus:variety_of_spaces`=
ifelse(is.na(`where_to_focus:variety_of_spaces`), 0, 1),
`where_to_focus:flexibility_of_spaces`=
ifelse(is.na(`where_to_focus:flexibility_of_spaces`), 0, 1),
`where_to_focus:how_we_use_spaces`=
ifelse(is.na(`where_to_focus:how_we_use_spaces`), 0, 1),
`where_to_focus:technology_in_spaces`=
ifelse(is.na(`where_to_focus:technology_in_spaces`), 0, 1),
`where_to_focus:furniture_in_spaces`=
ifelse(is.na(`where_to_focus:furniture_in_spaces`), 0, 1),
`where_to_focus:policies_governing_spaces`=
ifelse(is.na(`where_to_focus:policies_governing_spaces`), 0, 1)) %>%
reshape2::melt(id.vars=c("id", "start_date",
"end_date", "ip", "email"),
variable.name="question",
value.name="response") %>%
dplyr::mutate(question_type=ifelse(grepl("where_to_be|seat", question),
"long_form", ifelse(grepl("prototype_pitch", question),
"prototype_pitch",
"quantitative"))) %>%
dplyr::mutate(response=ifelse(grepl("pct_", question) & is.na(response),
0,
response)) %>%
dplyr::mutate(response=ifelse(grepl("time_loss", question) & is.na(response),
0,
response)) %>%
dplyr::mutate(response=ifelse(grepl("enter_prototype_competition", question) &
is.na(response),
0,
response)) %>%
dplyr::mutate(response=ifelse(grepl("enter_prototype_competition", question) &
response == "No",
0,
response)) %>%
dplyr::mutate(response=ifelse(grepl("enter_prototype_competition", question) &
response == "Yes",
1,
response)) %>%
dplyr::mutate(response=ifelse(grepl("pct_", question),
as.numeric(response) / 100,
response)) %>%
dplyr::left_join(people_db) %>%
dplyr::left_join(broad_map)
View(survey_dat)
consult <- readr::read_csv("~/Desktop/consulting.csv")
View(consult)
View(consult)
consult <- readr::read_csv("~/Desktop/consulting.csv") %>%
reshape2::melt(id.vars="Data Item", variable.name="State", value.name="value")
View(consult)
consult %>%
reshape2::acast(State ~ `Data Item`, value.var="value") %>%
prcomp() %>%
ggbiplot::ggbiplot()
length(unique(consult$State))
consult %>%
reshape2::acast(State ~ `Data Item`, value.var="value") %>%
scale() %>%
prcomp() %>%
ggbiplot::ggbiplot()
consult %>%
reshape2::acast(State ~ `Data Item`, value.var="value") %>%
scale() %>%
prcomp() %>%
ggbiplot::ggbiplot() +
geom_label(aes(label=State))
consult %>%
reshape2::acast(State ~ `Data Item`, value.var="value") %>%
scale() %>%
prcomp() %>%
ggbiplot::ggbiplot() +
geom_label(label=unique(consult$State))
View(consult)
View(consult)
consult %>%
reshape2::acast(State ~ `Data Item`, value.var="value") %>%
scale() %>%
Rtsne::Rtsne() %>%
magrittr::extract2("Y") %>%
plot()
consult %>%
reshape2::acast(State ~ `Data Item`, value.var="value") %>%
scale() %>%
Rtsne::Rtsne(perplexity=2) %>%
magrittr::extract2("Y") %>%
plot()
View(consult)
consult %>%
reshape2::acast(State ~ `Data Item`, value.var="value") %>%
log() %>%
scale() %>%
prcomp() %>%
ggbiplot::ggbiplot() +
geom_label(label=unique(consult$State))
install.packages("vestr")
install.packages("rvest")
rvest::google_form("1YA6OgwKAG97lbwxf1uZIjbzOfENfF3x7FkChp2TezCM")
doc <- rvest::google_form("1YA6OgwKAG97lbwxf1uZIjbzOfENfF3x7FkChp2TezCM")
View(doc)
doc$doc %>% View()
doc %>% rvest::html_node()
doc %>% rvest::html_nodes()
doc %>% rvest::html_table()
hart_essentials <- readr::read_tsv("~/Desktop/ceres_manuscript_figs/gold_standard/BayesFactors-Hart-et-al/core-essentials-291-genes-24-of-top48-screens-217constitutive")
hart_essentials <- readr::read_tsv("~/Desktop/ceres_manuscript_figs/gold_standard/BayesFactors-Hart-et-al/core-essentials-291-genes-24-of-top48-screens-217constitutive", col_names = F)
View(hart_essentials)
hart_essentials <- readr::read_tsv("~/Desktop/ceres_manuscript_figs/gold_standard/BayesFactors-Hart-et-al/core-essentials-291-genes-24-of-top48-screens-217constitutive", col_names = F) %>% dplyr::rename(Gene=X1)
save(hart_essentials, "~/CPDS/ceres/ceresr/data/hart_essentials.RData")
save(hart_essentials, "~/CPDS/achilles/ceres/ceresr/data/hart_essentials.RData")
save(hart_essentials, file="~/CPDS/achilles/ceres/ceresr/data/hart_essentials.RData")
hart_nonessentials <- readr::read_tsv("~/Desktop/ceres_manuscript_figs/gold_standard/BayesFactors-Hart-et-al/nonessential-genes-combined-14bodymap-15encode-927genes", col_names = F)
hart_nonessentials <- readr::read_tsv("~/Desktop/ceres_manuscript_figs/gold_standard/BayesFactors-Hart-et-al/nonessential-genes-combined-14bodymap-15encode-927genes", col_names = F) %>% dplyr::rename(Gene=X1)
save(hart_nonessentials, file="~/CPDS/achilles/ceres/ceresr/data/hart_nonessentials.RData")
devtools::install("~/CPDS/achilles/ceres/ceresr")
library(ceresr)
data("hart_essentials")
hart_essentials
setwd("~/CPDS/achilles/ceres/ceresr")
data("hart_essentials")
rm(hart_essentials)
rm(hart_nonessentials)
hart_essentials
ceresr::hart_essentials
source('~/CPDS/achilles/ceres/ceresr/R/scale_to_essentials.R')
devtools::install("~/CPDS/achilles/ceres/ceresr")
devtools::document("~/CPDS/achilles/ceres/ceresr")
devtools::install("~/CPDS/achilles/ceres/ceresr")
ge_fit <- readRDS("~/Google Drive/CERES/ModelOutputs/2017-06-19/avana_wes/ge_fit.Rds")
scaled_ge_fit <- ceresr::scale_to_essentials(ge_fit)
View(scaled_ge_fit)
hist(scaled_ge_fit)
devtools::install("~/CPDS/achilles/ceres/ceresr")
scaled_ge_fit <- ceresr::scale_to_essentials(ge_fit)
View(scaled_ge_fit)
hist(scaled_ge_fit)
hist(scaled_ge_fit, breaks=100)
median(scaled_ge_fit)
median(scaled_ge_fit, na.rm=T)
median(scaled_ge_fit[hart_nonessentials$Gene,], na.rm=T)
median(scaled_ge_fit[which(row.names(scaled_ge_fit) %in% hart_nonessentials$Gene),], na.rm=T)
median(scaled_ge_fit[which(row.names(scaled_ge_fit) %in% hart_essentials$Gene),], na.rm=T)
help(lapply)
source('~/CPDS/achilles/ceres/ceresr/R/run_precision_recall.R')
devtools::install("~/CPDS/achilles/ceres/ceresr")
devtools::install("~/CPDS/achilles/ceres/ceresr")
devtools::install("~/CPDS/achilles/ceres/ceresr")
devtools::install("~/CPDS/achilles/ceres/ceresr")
q()
